@model WorkoutViewModel

<h2>Create Workout</h2>

<form asp-action="Create" method="post">

    <div>
        <label asp-for="ClientEmail">Client</label>
        <input asp-for="ClientEmail" class="form-control" />
        <span asp-validation-for="ClientEmail" class="text-danger"></span>
    </div>

    <!-- Exercises Section -->
    <h4>Exercises</h4>

    <span id="minOneExWarning" class="text-danger" style="display:none">A Workout must contain at least one Exercise</span>

    @if (Model.Exercises != null && Model.Exercises.Any())
    {
        <div id="exerciseContainer">
            @for (var i = 0; i < Model.Exercises.Count; i++)
            {
                <div class="exercise">

                    <div class="form-group">
                        <label for="Exercises[@i].Name" class="control-label">Name</label>
                        <input type="text" class="form-control" name="exercises[@i].Name" value="@Model.Exercises[i].Name" />
                        <span asp-validation-for="Exercises[i].Name" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label for="Exercises[@i].MachineId" class="control-label">Machine</label>
                        @Html.DropDownListFor(
                                 model => model.Exercises[i].MachineId,
                                 new SelectList(Model.Machines, "Id", "Name"),
                                 "Select a Machine",
                                 new { @class = "form-control" }
                                 )

                        <span asp-validation-for="Exercises[i].MachineId" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label for="Exercise[@i].Time" class="control-label">Duration</label>
                        <input step="1" type="time" class="form-control" name="exercises[@i].Time" value="@Model.Exercises[i].Time" />
                        <span asp-validation-for="Exercises[i].Time" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label for="Exercises[@i].Repetitions" class="control-label">Repetitions</label>
                        <input type="number" value="@Model.Exercises[i].Repetitions" class="form-control" name="exercises[@i].Repetitions" />
                        <span asp-validation-for="Exercises[i].Repetitions" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="Exercises[@i].Sets" class="control-label">Sets</label>
                        <input type="number" value="@Model.Exercises[i].Sets" class="form-control" name="exercises[@i].Sets" />
                        <span asp-validation-for="Exercises[i].Sets" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="Exercises[@i].DayOfWeek" class="control-label">Day of Week</label>
                        <select class="form-control" name="exercises[@i].DayOfWeek">
                            @foreach (DayOfWeek day in Enum.GetValues(typeof(DayOfWeek)))
                            {
                                <option value="@day">@day</option>
                            }
                        </select>
                        <span asp-validation-for="Exercises[i].DayOfWeek" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label for="Exercise[@i].Notes">Notes</label>
                        <textarea class="form-control" name="exercises[@i].Notes" rows="3"></textarea>
                        <span asp-validation-for="Exercises[i].Notes" class="text-danger"></span>
                    </div>

                    <button type="button" class="btn btn-danger remove-exercise">Remove</button>
                </div>
            }
        </div>
    }
    else
    {
        <div id="exerciseContainer">
            <div class="exercise">
                <div class="form-group">
                    <label for="Exercise_0__Name">Name</label>
                    <input type="text" class="form-control" name="exercises[0].Name" />
                    <span asp-validation-for="Exercises[0].Name" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label for="Exercise_0__Machine" class="control-label">Machine</label>
                    <select id="Exercise_0__Machine" class="form-control" name="exercises[0].MachineId">
                        <option value="0">Select a Machine</option>
                        @foreach (var machine in @Model.Machines)
                        {
                            <option value="@machine.Id">@machine.Name</option>
                        }
                    </select>
                    <span asp-validation-for="Exercises[0].MachineId" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label for="Exercise_0__Time" class="control-label">Duration</label>
                    <input type="time" step="1" class="form-control" name="exercises[0].Time" value="00:00:00"/>
                    <span asp-validation-for="Exercises[0].Time" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="Exercise_0__Repetitions">Repetitions</label>
                    <input type="number" class="form-control" name="exercises[0].Repetitions" value="0" />
                    <span asp-validation-for="Exercises[0].Repetitions" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="Exercise_0__Sets">Sets</label>
                    <input type="number" class="form-control" name="exercises[0].Sets" value="0" />
                    <span asp-validation-for="Exercises[0].Sets" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="Exercise_0__DayOfWeek">Day of Week</label>
                    <select class="form-control" name="exercises[0].DayOfWeek">
                        @foreach (DayOfWeek day in Enum.GetValues(typeof(DayOfWeek)))
                        {
                            <option value="@day">@day</option>
                        }
                    </select>
                    <span asp-validation-for="Exercises[0].DayOfWeek" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="Exercise_0__Notes">Notes</label>
                    <textarea class="form-control" name="exercises[0].Notes" rows="3"></textarea>
                    <span asp-validation-for="Exercises[0].Notes" class="text-danger"></span>
                </div>

@*                 <button type="button" class="btn btn-danger remove-exercise">Remove</button>
 *@            </div>
        </div>
    }

    <button type="button" id="addExercise" class="btn btn-success">Add Exercise</button>

    <script>
        $(document).ready(function () {
            $('#addExercise').click(function () {
                console.log('Add Exercise button clicked!');
            });
        });
    </script>

    <div class="form-group">
        <input type="submit" value="Create Workout" class="btn btn-primary" />
    </div>
</form>

@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            var exerciseCount = @((Model.Exercises != null && Model.Exercises.Any()) ? Model.Exercises.Count : 1);

            // Function to create a new exercise entry
            function createNewExercise() {
                return `
                    <div class="exercise">
                        <div class="form-group">
                            <label for="Exercise_${exerciseCount}__Name">Name</label>
                            <input type="text" class="form-control" name="exercises[${exerciseCount}].Name" />
                            <span asp-validation-for="Exercise_${exerciseCount}__Name" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label for="Exercise_${exerciseCount}__Machine" class="control-label">Machine</label>
                            <select id="Exercise_${exerciseCount}__Machine" class="form-control" name="exercises[${exerciseCount}].MachineId" required>
                                <option value="">Select a Machine</option>
        @foreach (var machine in Model.MachinesDTO)
        {
                                        <option value="@machine.Id">@machine.Name</option>
        }
                            </select>
                            <span asp-validation-for="Exercise_${exerciseCount}__MachineId" class="text-danger"></span>
                        </div>

                                                <div class="form-group">
                            <label for="Exercise_0__Ticks" class="control-label">Duration</label>
                                    <input step="1" type="time" class="form-control" name="exercises[0].Ticks" value="0" />
                            <span asp-validation-for="Exercises[0].Ticks" class="text-danger"></span>
                        </div>

                                                        <div class="form-group">
                                    <label for="Exercise_${exerciseCount}__Ticks">Repetitions</label>
                                    <input type="number" class="form-control" name="exercises[${exerciseCount}].Repetitions" value="0" />
                                    <span asp-validation-for="Exercise_${exerciseCount}__Repetitions" class="text-danger"></span>
                                </div>

                        <div class="form-group">
                            <label for="Exercise_${exerciseCount}__Repetitions">Repetitions</label>
                            <input type="number" class="form-control" name="exercises[${exerciseCount}].Repetitions" value="0" />
                            <span asp-validation-for="Exercise_${exerciseCount}__Repetitions" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label for="Exercise_${exerciseCount}__Sets">Sets</label>
                            <input type="number" class="form-control" name="exercises[${exerciseCount}].Sets" value="0" />
                            <span asp-validation-for="Exercise_${exerciseCount}__Sets" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label for="Exercise_${exerciseCount}__DayOfWeek">Day of Week</label>
                            <select class="form-control" name="exercises[${exerciseCount}].DayOfWeek">
        @foreach (DayOfWeek day in Enum.GetValues(typeof(DayOfWeek)))
        {
                                        <option value="@day">@day</option>
        }
                            </select>
                            <span asp-validation-for="Exercise_${exerciseCount}__DayOfWeek" class="text-danger"></span>
                        </div>
                          <div class="form-group">
                                    <label for="Exercise_${exerciseCount}__Notes">Notes</label>
                                    <textarea class="form-control" name="exercises[${exerciseCount}].Notes" rows="3"></textarea>
                                    <span asp-validation-for="exercises[${exerciseCount}].Notes"  class="text-danger"></span>
                        </div>
                        <button type="button" class="btn btn-danger remove-exercise">Remove</button>
                    </div>
                `;
            }

            // Add new exercise entry
            $('#addExercise').click(function () {
                var newExercise = createNewExercise();
                $('#exerciseContainer').append(newExercise);

                // Re-populate the new dropdown for machines
                var machineSelect = $(`#Exercise_${exerciseCount}__Machine`);
                machineSelect.empty();

                machineSelect.append(`<option value="0">Select a Machine</option>`);

                @foreach (var machine in Model.MachinesDTO)
                {
                    <text>machineSelect.append(`<option value="@machine.Id">@machine.Name</option>`); </text>
                }

                exerciseCount++;
            });

            // Remove an exercise entry
            $(document).on('click', '.remove-exercise', function () {
                $(this).closest('.exercise').remove();
            });

            // Remove an exercise entry
            $(document).on('click', '.remove-exercise', function () {
                // Check the count of exercises before removing
                if ($('.exercise').length > 1) {
                    $(this).closest('.exercise').remove();
                    // Hide the warning message if it's currently displayed
                    $('#minOneExWarning').hide();
                } else {
                    // Show the warning message if trying to remove the last exercise
                    $('#minOneExWarning').show();
                }
            });
        });
    </script>

}